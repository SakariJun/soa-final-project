# Running Application Flow
# Step 1: Register an account

# Step 2: Login and receive AccessToken

# Step 3: Use AccessToken to get user information 
# or checks tuitions of another student by student_id
# or update account's balance

# Step 4: Validate Tuitions To check if student is affordable for a specific tuition
# If affordable then generate an OTP code and send it to student email

# Step 5: Validate OTP and if valid transaction is created and student balance will be updated

POST http://localhost:5000/api/v1/i-banking/user/register
content-type: application/json

{
    "full_name": "Tăng Kiến Trung",
    "phone_number": "0775598582",
    "email": "trungtkt159@gmail.com",
    "student_id": "51900718"
}

###
POST http://localhost:5000/api/v1/i-banking/user/register
content-type: application/json

{
    "full_name": "Trương Tuấn Thịnh",
    "phone_number": "0775598581",
    "email": "trungtkt1911@gmail.com",
    "student_id": "51900712"
}

###
POST http://localhost:5000/api/v1/i-banking/user/login
content-type: application/json

{
    "username": "51900712",
    "password": "51900712"
}

###
GET http://localhost:5000/api/v1/i-banking/user/get-user-information

###
PUT http://localhost:5000/api/v1/i-banking/user/update-user-balance
content-type: application/json

{
    "balance": 5000000.5
}


###
POST http://localhost:5000/api/v1/i-banking/tuition/create-tuition
content-type: application/json

{
    "student_id": "51900712",
    "tuition_payment": 5000000
}

###
GET http://localhost:5000/api/v1/i-banking/tuition/get-tuitions?student_id=51900718


###
GET http://localhost:5000/api/v1/i-banking/tuition/get-tuitions?student_id=51900712



###
POST http://localhost:5000/api/v1/i-banking/tuition/validate-tuition
content-type: application/json

{
    "tuition_id": "635bfb9409e936b0609675e7"
}

###
POST http://localhost:5000/api/v1/i-banking/otp/verify-otp
content-type: application/json

{
    "otp": "352766",
    "tuition_id": "635bfb9409e936b0609675e7"
}

